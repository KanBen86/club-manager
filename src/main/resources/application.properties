# Common configuration
server.port=8080
spring.application.name=Club-Manager Web Application

# JSP configuration
spring.mvc.view.prefix=/WEB-INF/jsp
spring.mvc.view.suffix=.jsp

# Database-Configuration
# Local-Dev with H2
# spring.datasource.url=jdbc:h2:file:C:/TMP/test_db
# spring.datasource.username=cm-admin
# spring.datasource.password=Cm-cM_CM!2019?BFMS
# spring.datasource.driver-class-name=org.h2.Driver

# ===============================
# = DATA SOURCE || MariaDB-Server Konfiguration
# ===============================
# Set here configurations for the database connection
spring.datasource.url=jdbc:mariadb://78.47.220.130:3306/clavameumTestDb
spring.datasource.username=clavameum
spring.datasource.password=clavameum#!2019
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect